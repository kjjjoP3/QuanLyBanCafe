/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uiNew;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ACER NITRO 5
 */
public class KhachHangJpan extends javax.swing.JPanel {
DefaultTableModel tblModel;
    Vector row;
    SimpleDateFormat ft = new SimpleDateFormat("yyyy/MM/dd");
    /**
     * Creates new form KhachHangJpan
     */
    public KhachHangJpan() {
        initComponents();
        grpGrender.add(RdOn);
        grpGrender.add(RdOff);
        tblCus.setRowHeight(20);
        tblModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
        tblModel.addColumn("Mã thẻ");
        tblModel.addColumn("Số CMND");
        tblModel.addColumn("Họ và Tên");
        tblModel.addColumn("Ngày đăng ký");
        tblModel.addColumn("SĐT");
        tblModel.addColumn("Email");
        tblModel.addColumn("Số ly");
        tblModel.addColumn("Chiết khấu");
        tblCus.setModel(tblModel);
        ReloadTable();
        RdOffActionPerformed(null);
    }
    
    
    private void ReloadTable() {
  
        try {
            
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
        String connectionUrl = "jdbc:sqlserver://localhost;database=TheOne;";
        String dbusername = "sa";
        String password ="01219164372";
        Connection con = DriverManager.getConnection(connectionUrl,dbusername,password);
        
        
        PreparedStatement pstmt;
        ResultSet rs;
        
         tblModel.getDataVector().removeAllElements();
        try {
            pstmt = con.prepareStatement("select * from Customer order by IDCus DESC");
            rs = pstmt.executeQuery();
            while (rs.next()) {
                row = new Vector();
                 row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                row.add(rs.getString(7));
                row.add(rs.getString(8));
                tblModel.addRow(row);
            }
            tblCus.setModel(tblModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
        lbSL.setText("(" + tblCus.getRowCount() + " thành viên)");
        
        con.close();
        
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpGrender = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDis = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lbSL = new javax.swing.JLabel();
        RdOn = new javax.swing.JRadioButton();
        RdOff = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        pnInfomation = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbDis = new javax.swing.JLabel();
        lbQuantity = new javax.swing.JLabel();
        lbLoiName = new javax.swing.JLabel();
        lbLoiEmail = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();
        lbLoiCMND = new javax.swing.JLabel();
        lbLoiSDT = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Thông tin thành viên");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Thẻ căn cước/CMND:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Họ và Tên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Số điện thoại:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Chiết Khấu:");

        jLabel14.setForeground(new java.awt.Color(204, 0, 0));
        jLabel14.setText("Điều kiện Thêm/Cập nhật/Xóa: Thẻ căn cước/CMND gốc.");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lbSL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSL.setText("(0 thành viên)");

        RdOn.setText("Hiện");
        RdOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdOnActionPerformed(evt);
            }
        });

        RdOff.setSelected(true);
        RdOff.setText("Ẩn");
        RdOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdOffActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 0));
        jLabel6.setText("Bảng thành viên");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDel.setText("Xóa");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        pnInfomation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Mã thẻ:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Ngày đăng ký:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Số ly đã dùng:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Chiết khấu:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Thông tin thêm:");

        lbID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbID.setForeground(new java.awt.Color(153, 153, 153));
        lbID.setText("trống");

        lbDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDate.setForeground(new java.awt.Color(153, 153, 153));
        lbDate.setText("trống");

        lbDis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDis.setForeground(new java.awt.Color(153, 153, 153));
        lbDis.setText("trống");

        lbQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbQuantity.setForeground(new java.awt.Color(153, 153, 153));
        lbQuantity.setText("trống");

        javax.swing.GroupLayout pnInfomationLayout = new javax.swing.GroupLayout(pnInfomation);
        pnInfomation.setLayout(pnInfomationLayout);
        pnInfomationLayout.setHorizontalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(pnInfomationLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbID))
                            .addGroup(pnInfomationLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDate)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnInfomationLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDis))
                            .addGroup(pnInfomationLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbQuantity)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnInfomationLayout.setVerticalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lbDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lbDis))
                .addContainerGap())
        );

        lbLoiName.setForeground(new java.awt.Color(255, 0, 0));

        lbLoiEmail.setForeground(new java.awt.Color(255, 0, 0));

        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCus.getTableHeader().setReorderingAllowed(false);
        tblCus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCus);

        lbLoiCMND.setForeground(new java.awt.Color(255, 0, 0));

        lbLoiSDT.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(90, 90, 90)
                                                .addComponent(lbLoiName))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(txtName))))
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(lbLoiCMND))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(59, 59, 59)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbLoiSDT)
                                                    .addComponent(lbLoiEmail))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(txtEmail)
                                            .addComponent(txtDis)
                                            .addComponent(txtPhone)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnInfomation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(6, 6, 6)
                                        .addComponent(btnUpdate)
                                        .addGap(6, 6, 6)
                                        .addComponent(btnDel)
                                        .addGap(6, 6, 6)
                                        .addComponent(btnReset))
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(lbSL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RdOn)
                        .addGap(18, 18, 18)
                        .addComponent(RdOff))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lbSL)
                            .addComponent(RdOn)
                            .addComponent(RdOff))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel1))
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(lbLoiCMND)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel2))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbLoiName)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(lbLoiSDT)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbLoiEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtDis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDel)
                            .addComponent(btnReset))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnInfomation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RdOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdOnActionPerformed
        tblCus.setVisible(true);
    }//GEN-LAST:event_RdOnActionPerformed

    private void RdOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdOffActionPerformed
        tblCus.setVisible(false);
    }//GEN-LAST:event_RdOffActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://localhost;database=TheOne;";
            String dbusername = "sa";
            String password ="01219164372";
            Connection con = DriverManager.getConnection(connectionUrl,dbusername,password);

            PreparedStatement pstmt ;
            ResultSet rs ;

            while (true) {
                if (txtCMND.getText().trim().equals("")) {
                    lbLoiCMND.setText("Số thẻ căn cước/CMND không được bỏ trống.");
                    txtCMND.grabFocus();
                    return;
                } else {
                    lbLoiCMND.setText("");
                    break;
                }
            }
            try {
                pstmt = con.prepareStatement("select * from Customer where IdentityCard=?");
                pstmt.setString(1, txtCMND.getText());
                rs = pstmt.executeQuery();
                if (rs.next()) {
                    lbLoiCMND.setText("");
                    lbLoiName.setText("");
                    lbLoiSDT.setText("");
                    lbLoiEmail.setText("");

                    txtCMND.setText(rs.getString(2));
                    txtName.setText(rs.getString(3));
                    txtPhone.setText(rs.getString(5));
                    txtEmail.setText(rs.getString(6));
                    txtDis.setText(rs.getString(8));

                    lbID.setText(rs.getString(1));
                    lbDate.setText(rs.getString(4));
                    lbQuantity.setText(rs.getString(7) + " ly");
                    lbDis.setText(rs.getString(8) + "%");

                } else {

                    String Name = txtName.getText().replaceAll("\\s+", " ");
                    while (true) {
                        if (txtName.getText().trim().equals("")) {
                            lbLoiName.setText("Họ và tên không được bỏ trống.");
                            txtName.grabFocus();
                            return;
                        } else if (Name.length() > 30) {
                            lbLoiName.setText("Họ và tên chứa tối đa 30 kí tự.");
                            txtName.grabFocus();
                            return;
                        } else {
                            lbLoiName.setText("");
                            break;
                        }
                    }
                    while (true) {
                        if (txtPhone.getText().trim().equals("")) {
                            lbLoiSDT.setText("SĐT không được bỏ trống.");
                            txtPhone.grabFocus();
                            return;
                        } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                            lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                            txtPhone.grabFocus();
                            return;
                        } else {
                            lbLoiSDT.setText("");
                            break;
                        }
                    }
                    while (true) {
                        if (txtEmail.getText().trim().equals("")) {
                            lbLoiEmail.setText("Email không được bỏ trống.");
                            txtEmail.grabFocus();
                            return;
                        } else {
                            lbLoiEmail.setText("");
                            break;
                        }
                    }
                    while (true) {
                        if (txtDis.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Email không được bỏ trống");
                            txtDis.grabFocus();
                            return;
                        } else {

                            break;
                        }
                    }
                    pstmt = con.prepareStatement("Insert into Customer values(?,?,convert(varchar(20),getdate(),103),?,?,?,?)");
                    pstmt.setString(1, txtCMND.getText().trim());
                    pstmt.setString(2, Name);
                    pstmt.setString(3, txtPhone.getText().trim());
                    pstmt.setString(4, txtEmail.getText().trim());
                    pstmt.setInt(5, 0);
                    pstmt.setString(6, txtDis.getText().trim());
                    if (pstmt.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "Thêm thành viên thành công.");
                        btnAddActionPerformed(evt);
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thành viên thất bại.");
                    }
                    ReloadTable();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
            }

            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://localhost;database=TheOne;";
            String dbusername = "sa";
            String password ="01219164372";
            Connection con = DriverManager.getConnection(connectionUrl,dbusername,password);

            PreparedStatement pstmt ;
            ResultSet rs;

            while (true) {
                if (txtPhone.getText().trim().equals("")) {
                    lbLoiSDT.setText("SĐT không được bỏ trống.");
                    txtPhone.grabFocus();
                    return;
                } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                    lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                    txtPhone.grabFocus();
                    return;
                } else {
                    lbLoiSDT.setText("");
                    break;
                }
            }
            while (true) {
                if (txtEmail.getText().trim().equals("")) {
                    lbLoiEmail.setText("Email không được bỏ trống.");
                    txtEmail.grabFocus();
                    return;
                }  else {
                    lbLoiEmail.setText("");
                    break;
                }
            }
            try {
                pstmt = con.prepareStatement("Update Customer set CusName=?,Phone=?,Email=?,Discount=? where IDCus=?");
                pstmt.setString(1, txtName.getText().trim());
                pstmt.setString(2, txtPhone.getText().trim());
                pstmt.setString(3, txtEmail.getText().trim());
                pstmt.setString(4, txtDis.getText().trim());
                pstmt.setString(5, lbID.getText());
                if (pstmt.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật thành viên thành công.");

                } else {
                    JOptionPane.showMessageDialog(null, "Cập nhật thành viên thất bại.");
                }
                ReloadTable();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
            }

            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionUrl = "jdbc:sqlserver://localhost;database=TheOne;";
            String dbusername = "sa";
            String password ="01219164372";
            Connection con = DriverManager.getConnection(connectionUrl,dbusername,password);

            PreparedStatement pstmt ;
            ResultSet rs ;

            int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn xóa thành viên này?");
            if (click == 0) {
                try {
                    pstmt = con.prepareStatement("Delete from Customer where IDCus=?");
                    pstmt.setString(1, lbID.getText());
                    if (pstmt.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "Xóa thành viên thành công.");
                        btnResetActionPerformed(evt);
                    } else {
                        JOptionPane.showMessageDialog(null, "Xóa thành viên thất bại.");
                    }
                    ReloadTable();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
                }
            }

            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnDelActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCMND.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        txtDis.setText("");

        lbID.setText("trống");
        lbDate.setText("trống");
        lbQuantity.setText("");
        lbDis.setText("trống");

        lbLoiCMND.setText("");
        lbLoiName.setText("");
        lbLoiSDT.setText("");
        lbLoiEmail.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblCusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCusMouseClicked
        int line = tblCus.getSelectedRow();
        //            Date start = ft.parse((String) tblPromo.getValueAt(line, 3));
        //            Date end = ft.parse((String) tblPromo.getValueAt(line, 4));
        lbID.setText(String.valueOf(tblCus.getValueAt(line, 0)));
        txtCMND.setText(String.valueOf(tblCus.getValueAt(line, 1)));
        txtName.setText((String) tblCus.getValueAt(line, 2));
        lbDate.setText(String.valueOf(tblCus.getValueAt(line, 3)));
        txtPhone.setText(String.valueOf(tblCus.getValueAt(line, 4)));
        txtEmail.setText((String) tblCus.getValueAt(line, 5));
        lbQuantity.setText(String.valueOf(tblCus.getValueAt(line, 6)));
        lbDis.setText(String.valueOf(tblCus.getValueAt(line, 7)));
        txtDis.setText(String.valueOf(tblCus.getValueAt(line, 7)));
    }//GEN-LAST:event_tblCusMouseClicked

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RdOff;
    private javax.swing.JRadioButton RdOn;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup grpGrender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDis;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbLoiCMND;
    private javax.swing.JLabel lbLoiEmail;
    private javax.swing.JLabel lbLoiName;
    private javax.swing.JLabel lbLoiSDT;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JLabel lbSL;
    private javax.swing.JPanel pnInfomation;
    private javax.swing.JTable tblCus;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDis;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
